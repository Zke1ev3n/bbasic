CALL LABEL0 ; For initialization

;================ MAIN PROG ==================
;<Init data ptr>
LD dword r2,CD_INITDATA
IN r2,22
;</Init data ptr>
LABEL_1:
;<Epression>
; Flush stack: 1  [1]
PUSH 2
POP r3
;</Epression>
LD int r0,VINT_I
LD int [r0],r3
; If code
;<Epression>
; Flush stack: 16 1 >  [3]
PUSH [VINT_I]
PUSH 0
POP r1
POP r0
CMP int r0,r1
JPC BE LABEL5
PUSH 1
JMP LABEL6
LABEL5:
PUSH 0
LABEL6:
POP r3
;</Epression>
CMP int r3,0
JPC Z LABEL3
;<Epression>
; Flush stack: 16 1 -  [3]
PUSH [VINT_I]
PUSH 1
POP r1
POP r0
CAL int SUB r0,r1
PUSH r0
POP r3
;</Epression>
LD int r0,VINT_J
LD int [r0],r3
JMP LABEL4
LABEL3:	; Else
;<Epression>
; Flush stack: 16 1 +  [3]
PUSH [VINT_I]
PUSH 1
POP r1
POP r0
CAL int ADD r0,r1
PUSH r0
POP r3
;</Epression>
LD int r0,VINT_J
LD int [r0],r3
LABEL4:	; End of If
;<Epression>
; Flush stack: 16 C  [2]
PUSH [CSTRING_7]
POP r2
IN r3,2
IN r2,5
PUSH r3
POP r3
;</Epression>
OUT 2,r3
IN r3,8
OUT 4,32
;<Epression>
; Flush stack: 16  [1]
PUSH [VINT_J]
POP r3
;</Epression>
OUT 3,r3
OUT 4,32
EXIT

;================ FUNCTIONS ==================

;================ Init Code ==================
LABEL0:
LD dword [CSTRING_7],CS_CSTRING_7
RET
LABEL1:
EXIT

; Declaration:
LABEL2:
DATA VINT_I dword 0
DATA VINT_J dword 0
DATA VINT_AMA dword 0
DATA CSTRING_7 dword 0
DATA CS_CSTRING_7 char "J=",0
DATA CD_INITDATA bin %%
